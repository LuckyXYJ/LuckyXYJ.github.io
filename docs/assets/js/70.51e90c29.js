(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{377:function(a,t,e){"use strict";e.r(t);var s=e(6),r=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"链接静态库-a生成可执行文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#链接静态库-a生成可执行文件"}},[a._v("#")]),a._v(" 链接静态库.a生成可执行文件")]),a._v(" "),t("p",[a._v("操作文件夹：链接静态库.a文件")]),a._v(" "),t("p",[a._v("在生成test.o文件时，需要有TestExample.h文件")]),a._v(" "),t("h3",{attrs:{id:"_1、将test-m编译成test-o"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、将test-m编译成test-o"}},[a._v("#")]),a._v(" 1、将test.m编译成test.o:")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("使用OC")])]),a._v(" "),t("li",[t("p",[a._v("生成的是X86_"),t("em",[a._v("64")]),a._v("_macOS架构的代码")]),a._v(" "),t("ol",[t("li",[a._v("Big Sur是：x86_64-apple-macos11.1，")]),a._v(" "),t("li",[a._v("之前是：x86_64-apple-macos10.15")])])]),a._v(" "),t("li",[t("p",[a._v("使用ARC")])]),a._v(" "),t("li",[t("p",[a._v("使用的SDK的路径在:")]),a._v(" "),t("ol",[t("li",[a._v("Big Sur是：/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.1.sdk")]),a._v(" "),t("li",[a._v("之前是：/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk")])])]),a._v(" "),t("li",[t("p",[a._v("用到的其他库的头文件地址在./Frameworks")])])]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("clang -x objective-c "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n-target x86_64-apple-macos11.1 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n-fobjc-arc "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n-I./StaticLibrary "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n-c test.m -o test.o\n")])])]),t("p",[a._v("将TestExample.m 编译成TestExample.o")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("clang -x objective-c "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n-target x86_64-apple-macos11.1 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n-fobjc-arc "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n-c TestExample.m -o TestExample.o\n")])])]),t("h3",{attrs:{id:"_2、-o文件生成-a静态库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、-o文件生成-a静态库"}},[a._v("#")]),a._v(" 2、.o文件生成.a静态库")]),a._v(" "),t("p",[a._v("创建库命令，可以创建动态静态库")]),a._v(" "),t("p",[a._v("使用上面生成的TestExample.o 来创建libTestExample.a 静态库")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("libtool -static -arch_only x86_64 TestExample.o -o libTestExample.a\n")])])]),t("h3",{attrs:{id:"_3、-o文件链接静态库-生成可执行文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、-o文件链接静态库-生成可执行文件"}},[a._v("#")]),a._v(" 3、.o文件链接静态库，生成可执行文件")]),a._v(" "),t("p",[a._v("test.o链接libTestExample.a生成test可执行文件")]),a._v(" "),t("p",[a._v("-L./StaticLibrary 在当前目录的子目录StaticLibrary查找需要的库文件")]),a._v(" "),t("p",[a._v("-lTestExample 链接的名称为libTestExample/TestExample的动态库或者静态库")]),a._v(" "),t("p",[a._v("查找规则：先找lib+<library_name>的动态库，找不到，再去找lib+<library_name>的静态库，还找不到，就报错")]),a._v(" "),t("p",[a._v("-syslibroot: 系统库文件的目录")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("ld "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n-syslibroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -lsystem -framework Foundation "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n-lTestExample "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n-L./StaticLibrary "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\ntest.o -o "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v("\n")])])]),t("p",[a._v("也可以使用"),t("strong",[a._v("clang")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("clang -target x86_64-apple-macos11.1 \\\n-fobjc-arc \\\n-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk \\\n-L./StaticLibrary \\\n-lTestExample \\\ntest.o -o test\n")])])]),t("h2",{attrs:{id:"链接frameworks静态库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#链接frameworks静态库"}},[a._v("#")]),a._v(" 链接Frameworks静态库")]),a._v(" "),t("p",[a._v("文件夹：静态库与Framework")]),a._v(" "),t("h3",{attrs:{id:"_1、创建-frameworks静态库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、创建-frameworks静态库"}},[a._v("#")]),a._v(" 1、创建.frameworks静态库")]),a._v(" "),t("p",[a._v("执行命令 TestExample.m --\x3e TestExample.o --\x3e TestExample文件")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("clang -x objective-c \\\n-target x86_64-apple-macos11.1 \\\n-fobjc-arc \\\n-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk \\\n-c TestExample.m -o TestExample.o\n\nlibtool -static -arch_only x86_64 TestExample.o -o TestExample\n")])])]),t("p",[a._v("将TestExample文件和Header文件夹放在一个文件夹内，修改名字为TestExample.framework")]),a._v(" "),t("h3",{attrs:{id:"_2、test-m-生成-test-o"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、test-m-生成-test-o"}},[a._v("#")]),a._v(" 2、test.m 生成 test.o")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("clang -x objective-c  \\\n-target x86_64-apple-macos11.1 \\\n-fobjc-arc \\\n-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk \\\n-I./Frameworks/TestExample.framework/Headers \\\n-c test.m -o test.o\n")])])]),t("h3",{attrs:{id:"_3、test-o生成可执行文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、test-o生成可执行文件"}},[a._v("#")]),a._v(" 3、test.o生成可执行文件")]),a._v(" "),t("p",[a._v("test.o链接TestExample.framework生成test可执行文件")]),a._v(" "),t("p",[a._v("-F./Frameworks 在当前目录的子目录Frameworks查找需要的库文件")]),a._v(" "),t("p",[a._v("-framework TestExample 链接的名称为TestExample.framework的动态库或者静态库")]),a._v(" "),t("p",[a._v("查找规则：先找TestExample.framework的动态库，找不到，再去找TestExample.framework的静态库，还找不到，就报错")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("clang -target x86_64-apple-macos11.1 \\\n-fobjc-arc \\\n-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk \\\n-F./Frameworks \\\n-framework TestExample \\\ntest.o -o test\n")])])]),t("h2",{attrs:{id:"静态库冲突"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#静态库冲突"}},[a._v("#")]),a._v(" 静态库冲突")]),a._v(" "),t("p",[a._v("设置OTHER_LDFLAGS时参数：")]),a._v(" "),t("ul",[t("li",[a._v("noall_load：找到对应的符号就不会继续往下走")]),a._v(" "),t("li",[a._v("all_load：所有的符号都会被加入。")]),a._v(" "),t("li",[a._v("Objc： 所有OC符号都会被加入")])]),a._v(" "),t("p",[a._v("只有设置noall_load时以下代码才能正常执行。")]),a._v(" "),t("p",[a._v("同时可以指定force_load，load_hidden：")]),a._v(" "),t("ul",[t("li",[a._v("force_load指定冲突时强制链接哪个库")]),a._v(" "),t("li",[a._v("load_hidden指定隐藏哪个库")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('//-I\nHEADER_SEARCH_PATHS = $(inherited) "${SRCROOT}/AFNetworking" "${SRCROOT}/AFNetworking2"\n//-L\nLIBRARY_SEARCH_PATHS = $(inherited) "${SRCROOT}/AFNetworking" "${SRCROOT}/AFNetworking2"\n//-l\n// 冲突\n// all_load\n// -ObjC\n// 两个静态库 -》 库\n// OTHER_LDFLAGS = $(inherited) -l"AFNetworking" -l"AFNetworking2" \n// OTHER_LDFLAGS = $(inherited) -noall_load -l"AFNetworking" -l"AFNetworking2"\n// OTHER_LDFLAGS = $(inherited) -all_load -l"AFNetworking" -l"AFNetworking2"\n// OTHER_LDFLAGS = $(inherited) -Objc -l"AFNetworking" -l"AFNetworking2" \n\nOTHER_LDFLAGS = $(inherited) -l"AFNetworking" -l"AFNetworking2" -Xlinker -force_load -Xlinker "${SRCROOT}/AFNetworking/libAFNetworking.a" -Xlinker -load_hidden -Xlinker "${SRCROOT}/AFNetworking/libAFNetworking.a"\n')])])])])}),[],!1,null,null,null);t.default=r.exports}}]);