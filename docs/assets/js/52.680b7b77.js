(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{352:function(v,t,e){"use strict";e.r(t);var _=e(6),a=Object(_.a)({},(function(){var v=this,t=v._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"网络爬虫"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网络爬虫"}},[v._v("#")]),v._v(" 网络爬虫")]),v._v(" "),t("p",[v._v("网络爬虫(Web Crawler)，也叫做网络蜘蛛(Web Spider)")]),v._v(" "),t("p",[v._v("模拟人类使用浏览器操作页面的行为，对页面进行相关的操作")]),v._v(" "),t("p",[v._v("常用爬虫工具:Python的Scrapy框架")]),v._v(" "),t("p",[v._v("robots.txt是存放于网站根目录下的文本文件，比如"),t("a",{attrs:{href:"https://www.baidu.com/robots.txt",target:"_blank",rel:"noopener noreferrer"}},[v._v("https://www.baidu.com/robots.txt"),t("OutboundLink")],1),v._v(" 。用来告诉爬虫：哪些内容是不应被爬取的，哪些是可以被爬取的")]),v._v(" "),t("p",[v._v("因为一些系统中的URL是大小写敏感的，所以robots.txt的文件名应统一为小写")]),v._v(" "),t("h2",{attrs:{id:"vpn"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vpn"}},[v._v("#")]),v._v(" VPN")]),v._v(" "),t("p",[v._v("虚拟私人网络")]),v._v(" "),t("p",[v._v("它可以在公共网络上建立专用网络，进行加密通讯")]),v._v(" "),t("h3",{attrs:{id:"作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[v._v("#")]),v._v(" 作用")]),v._v(" "),t("p",[v._v("提高上网的安全性")]),v._v(" "),t("p",[v._v("保护公司内部资料")]),v._v(" "),t("p",[v._v("隐藏上网者的身份")]),v._v(" "),t("p",[v._v("突破网站的地域限制 有些网站针对不同地区的用户展示不同的内容")]),v._v(" "),t("p",[v._v("突破网络封锁 因为有GFW的限制，有些网站在国内上不了 Great Firewall of China 中国长城防火墙")]),v._v(" "),t("h3",{attrs:{id:"实现原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现原理"}},[v._v("#")]),v._v(" 实现原理")]),v._v(" "),t("p",[v._v("VPN的实现原理是：使用了隧道协议（Tunneling Protocol）")]),v._v(" "),t("p",[v._v("常见的VPN隧道协议有 PPTP（Point to Point Tunneling Protocol）：点对点隧道协议 L2TP（Layer Two Tunneling Protocol）：第二层隧道协议 IPsec（Internet Protocol Security）：互联网安全协议 SSL VPN（如OpenVPN） ......")]),v._v(" "),t("h3",{attrs:{id:"vpn与代理区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vpn与代理区别"}},[v._v("#")]),v._v(" VPN与代理区别")]),v._v(" "),t("p",[v._v("软件 VPN一般需要安装VPN客户端软件 代理不需要安装额外的软件")]),v._v(" "),t("p",[v._v("安全性 VPN默认会对数据进行加密 代理默认不会对数据进行加密（数据最终是否加密取决于使用的协议本身）")]),v._v(" "),t("p",[v._v("费用 一般情况下，VPN比代理贵")]),v._v(" "),t("h2",{attrs:{id:"websocket"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#websocket"}},[v._v("#")]),v._v(" WebSocket")]),v._v(" "),t("p",[v._v("HTTP请求的特点：通信只能由客户端发起。所以，早期很多网站为了实现推送技术，所用的技术都是轮询 。轮询是指由浏览器每隔一段时间（如每秒）向服务器发出HTTP请求，然后服务器返回最新的数据给客户端 。为了能更好的节省服务器资源和带宽，并且能够更实时地进行通讯，HTML5规范中出现了WebSocket协议。")]),v._v(" "),t("p",[v._v("WebSocket，是基于TCP的支持全双工通信的应用层协议 。客户端、服务器，任何一方都可以主动发消息给对方")]),v._v(" "),t("p",[v._v("应用场景: 社交订阅、股票基金报价、体育实况更新、多媒体聊天、多玩家游戏等")]),v._v(" "),t("h3",{attrs:{id:"http-vs-websocket"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-vs-websocket"}},[v._v("#")]),v._v(" HTTP VS WebSocket")]),v._v(" "),t("p",[v._v("1、WebSocket和HTTP属于平级关系，都是应用层的协议")]),v._v(" "),t("p",[v._v("2、WebSocket使用80（ws://）、443（wss://）端口，可以绕过大多数防火墙的限制")]),v._v(" "),t("p",[v._v("3、与HTTP不同的是，WebSocket需要先建立连接")]),v._v(" "),t("p",[v._v("这就使得WebSocket成为一种有状态的协议，之后通信时可以省略部分状态信息 而HTTP请求可能需要在每个请求都额外携带状态信息（如身份认证等）")]),v._v(" "),t("h3",{attrs:{id:"websocket-建立连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#websocket-建立连接"}},[v._v("#")]),v._v(" WebSocket -- 建立连接")]),v._v(" "),t("p",[v._v("WebSocket需要借助HTTP协议来建立连接（也叫作握手，Handshake） 由客户端（浏览器）主动发出握手请求")]),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("请求头参数：\nConnection必须设置Upgrade 表示客户端希望连接升级\nUpgrade必须设置websocket 表示希望升级到WebSocket协议\nSec-WebSocket-Version 表示支持的Websocket版本 RFC 6455要求使用的版本是13\nSec-WebSocket-Key是客户端生成的随机字符串\n\n响应头参数\nSec-WebSocket-Accept \n① Sec-WebSocket-Key加上一个固定的GUID值（258EAFA5-E914-47DA-95CA-C5AB0DC85B11\n② 将①的结果进行SHA-1摘要计算 得到 b37a4f2cc0624f1690f64606cf385945b2bec4ea \n③ 将②的结果进行Hex To Base64编码 得到 s3pPLMBiTxaQ9kYGzzhZRbK+xOo=\n④ 将③的结果做为Sec-WebSocket-Accept响应头的值，返回给客户端\n\n此设计，可以尽量避免普通HTTP请求被误认为WebSocket协议\n")])])]),t("h2",{attrs:{id:"webservice"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webservice"}},[v._v("#")]),v._v(" WebService")]),v._v(" "),t("p",[v._v("Web服务，是一种跨编程语言和跨操作系统平台的远程调用技术标准")]),v._v(" "),t("p",[t("strong",[v._v("SOAP（Simple Object Access Protocol）")])]),v._v(" "),t("p",[v._v("译为：简单对象访问协议 很多时候，SOAP = HTTP + XML。 WebService使用SOAP协议来封装传递数据")]),v._v(" "),t("p",[t("strong",[v._v("WSDL（Web Services Description Language）")])]),v._v(" "),t("p",[v._v("译为：Web服务描述语言 一个XML文档，用以描述WebService接口的细节（比如参数、返回值等） 一般在WebService的URL后面跟上?wsdl获取WSDL信息")]),v._v(" "),t("h2",{attrs:{id:"restful"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#restful"}},[v._v("#")]),v._v(" RESTful")]),v._v(" "),t("p",[v._v("译为“表现层状态转移”")]),v._v(" "),t("p",[v._v("REST 是一种互联网软件架构设计风格")]),v._v(" "),t("p",[v._v("定义了一组用于创建Web服务的约束 。符合REST架构的Web服务，称为 RESTful Web 服务")]),v._v(" "),t("h3",{attrs:{id:"restful-规范建议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#restful-规范建议"}},[v._v("#")]),v._v(" RESTful 规范建议")]),v._v(" "),t("p",[v._v("1、URL中使用名词（建议用复数形式），不使用动词")]),v._v(" "),t("p",[v._v("2、使用HTTP的方法表示动作")]),v._v(" "),t("p",[v._v("3、一个资源连接到其他资源，使用子资源的形式")]),v._v(" "),t("p",[v._v("4、API版本化。xx.com/v1/users，xx.com/v2/users")]),v._v(" "),t("p",[v._v("5、返回JSON格式的数据")]),v._v(" "),t("p",[v._v("6、发生错误时，不返回200状态码")]),v._v(" "),t("h2",{attrs:{id:"httpdns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#httpdns"}},[v._v("#")]),v._v(" HTTPDNS")]),v._v(" "),t("p",[v._v("HTTPDNS是基于HTTP协议向DNS服务器发送域名解析请求")]),v._v(" "),t("p",[v._v("替代了基于DNS协议向运营商Local DNS发起解析请求的传统方式")]),v._v(" "),t("p",[v._v("可以避免Local DNS造成的域名劫持和跨网访问问题")]),v._v(" "),t("p",[v._v("常用在移动互联网中（比如在Android、iOS开发中）")]),v._v(" "),t("h2",{attrs:{id:"ftp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ftp"}},[v._v("#")]),v._v(" FTP")]),v._v(" "),t("p",[v._v("文件传输协议")]),v._v(" "),t("p",[v._v("链接模式：主动（Active）和被动（Passive）")]),v._v(" "),t("p",[v._v("不管是哪种模式，都需要客户端和服务器建立2个连接")]),v._v(" "),t("p",[v._v("​\t① 控制连接：用于传输状态信息（命令，cmd）")]),v._v(" "),t("p",[v._v("​\t② 数据连接：用于传输文件和目录信息（data）")]),v._v(" "),t("h2",{attrs:{id:"邮件相关协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#邮件相关协议"}},[v._v("#")]),v._v(" 邮件相关协议")]),v._v(" "),t("p",[t("strong",[v._v("发邮件")]),v._v("： SMTP：简单邮件传输协议")]),v._v(" "),t("p",[t("strong",[v._v("收邮件")]),v._v("：")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("POP（Post Office Protocol）")]),v._v("，译为：邮局协议")])]),v._v(" "),t("p",[v._v("基于TCP，最新版是POP3，标准参考RFC 1939 服务器默认使用110端口，SSL/TLS使用995端口")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("IMAP（Internet Message Access Protocol）")]),v._v("，译为：因特网信息访问协议")])]),v._v(" "),t("p",[v._v("基于TCP，最新版是IMAP4，标准参考RFC 3501 服务器默认使用143端口，SSL/TLS使用993端口")]),v._v(" "),t("h3",{attrs:{id:"pop-vs-imap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pop-vs-imap"}},[v._v("#")]),v._v(" POP vs IMAP")]),v._v(" "),t("p",[v._v("POP的特点")]),v._v(" "),t("p",[v._v("客户端连接服务器时，将会从服务器下载所有邮件 可以设置下载完后，立即或一段时间后删除服务器邮件 客户端的操作（比如删除邮件、移动到文件夹）不会跟服务器同步 每个客户端都是独立的，都可以获得其自己的电子邮件副本")]),v._v(" "),t("p",[v._v("IMAP的特点")]),v._v(" "),t("p",[v._v("客户端连接服务器时，获取的是服务器上邮件的基本信息，并不会下载邮件 等打开邮件时，才开始下载邮件 客户端的操作（比如删除邮件、移动到文件夹）会跟服务器同步 所有客户端始终会看到相同的邮件和相同的文件夹")]),v._v(" "),t("h2",{attrs:{id:"ipv6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ipv6"}},[v._v("#")]),v._v(" IPV6")]),v._v(" "),t("p",[v._v("IPv6（Internet Protocol version 6），译为：网际协议第6版")]),v._v(" "),t("p",[v._v("用它来取代IPv4主要是为了解决IPv4地址枯竭问题，同时它也在其他方面对于IPv4有许多改进 然而长期以来IPv4在互联网流量中仍占据主要地位，IPv6的使用增长缓慢 在2019年12月，通过IPv6使用Google服务的用户百分率首次超过30% 因为需要设备、操作系统内核升级支持IPv6")]),v._v(" "),t("p",[t("strong",[v._v("IPv6采用128位的地址，而IPv4使用的是32位 。")])]),v._v(" "),t("h3",{attrs:{id:"ipv6地址格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ipv6地址格式"}},[v._v("#")]),v._v(" IPV6地址格式")]),v._v(" "),t("p",[v._v("IPv6地址为128bit，每16bit一组，共8组")]),v._v(" "),t("p",[v._v("每组以冒号“:”隔开，每组以4位十六进制方式表示 例如2001:0db8:86a3:08d3:1319:8a2e:0370:7344")]),v._v(" "),t("p",[v._v("类似于IPv4的点分十进制，同样也存在点分十六进制的写法 2.0.0.1.0.d.b.8.8.5.a.3.0.8.d.3.1.3.1.9.8.a.2.e.0.3.7.0.7.3.4.4")]),v._v(" "),t("p",[v._v("每组前面连续的0可以省略。下面的IPv6地址是等价的2001:0db8:02de:0000:0000:0000:0000:0e13 和 2001:db8:2de:0:0:0:0:e13")]),v._v(" "),t("p",[v._v("可以用双冒号“::”表示一组0或多组连续的0，但只能出现一次。下面的IPv6地址是等价的 2001:db8:2de:0:0:0:0:e13 和 2001:db8:2de::e13")]),v._v(" "),t("p",[v._v("::1是本地环回地址")]),v._v(" "),t("h2",{attrs:{id:"即时通信"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#即时通信"}},[v._v("#")]),v._v(" 即时通信")]),v._v(" "),t("p",[v._v("即时通信（Instant Messaging，简称IM），平时用的QQ、微信，都属于典型的IM应用")]),v._v(" "),t("p",[v._v("常用协议：XMPP、MQTT、自定义协议")]),v._v(" "),t("h3",{attrs:{id:"xmpp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xmpp"}},[v._v("#")]),v._v(" XMPP")]),v._v(" "),t("p",[v._v("译为：可扩展消息与存在协议，前身是Jabber 基于TCP，默认端口5222、5269")]),v._v(" "),t("p",[v._v("特点：使用XML格式进行传输，体积较大 比较成熟的IM协议，开发者接入方便")]),v._v(" "),t("h3",{attrs:{id:"mqtt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mqtt"}},[v._v("#")]),v._v(" MQTT")]),v._v(" "),t("p",[v._v("译为：消息队列遥测传输，基于TCP，默认端口1883、8883（带SSL/TLS）")]),v._v(" "),t("p",[v._v("特点：开销很小，以降低网络流量，信息冗余远小于XMPP 不是专门为IM设计的协议，很多功能需要自己实现 很多人认为MQTT是最适合物联网（IoT，Internet of Things）的网络协议")]),v._v(" "),t("h2",{attrs:{id:"流媒体"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#流媒体"}},[v._v("#")]),v._v(" 流媒体")]),v._v(" "),t("p",[v._v("流媒体（Streaming Media），又叫流式媒体")]),v._v(" "),t("p",[v._v("是指将一连串的多媒体数据压缩后，经过互联网分段发送数据，在互联网上即时传输影音以供观赏的一种技术")]),v._v(" "),t("p",[v._v("此技术使得资料数据包得以像流水一样发送，不使用此技术，就必须在使用前下载整个媒体文件")]),v._v(" "),t("p",[v._v("RTP（Real-Time Transport Protocol），译为：实时传输协议 参考：RFC 3550、RFC 3551，基于UDP")]),v._v(" "),t("p",[v._v("RTCP（Real-Time Transport Control Protocol），译为：实时传输控制协议 参考：RFC 3550，基于UDP，使用RTP的下一个端口")]),v._v(" "),t("p",[v._v("RTSP（Real-Time Streaming Protocol），译为：实时流协议，参考：RFC 7820 基于TCP、UDP的554端口")]),v._v(" "),t("p",[v._v("RTMP（Real-Time Messaging Protocol），译为：实时消息传输协议，由Adobe公司出品 默认基于TCP的1935端口")]),v._v(" "),t("p",[v._v("HLS（HTTP Live Streaming），基于HTTP的流媒体网络传输协议，苹果公司出品，参考：RFC 8216")])])}),[],!1,null,null,null);t.default=a.exports}}]);