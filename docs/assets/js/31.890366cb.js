(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{334:function(t,a,s){"use strict";s.r(a);var n=s(6),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),a("h3",{attrs:{id:"swift分为值类型和引用类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swift分为值类型和引用类型"}},[t._v("#")]),t._v(" Swift分为值类型和引用类型：")]),t._v(" "),a("p",[t._v("1、值类型分为枚举enum 和 结构体 struct")]),t._v(" "),a("ul",[a("li",[t._v("枚举：Optional")]),t._v(" "),a("li",[t._v("结构体：Bool、Int、Float、Double、Character、String、Array、Dictionary、Set")])]),t._v(" "),a("p",[t._v("2、引用类型 ：class")]),t._v(" "),a("h3",{attrs:{id:"swift-与oc对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swift-与oc对比"}},[t._v("#")]),t._v(" Swift 与OC对比")]),t._v(" "),a("p",[t._v("1、其中字符串，数组，字典，集合在OC中为引用类型，在Swift中为值类型")]),t._v(" "),a("p",[t._v("2、Swift是强类型语言，所有的变量必须先声明，后使用；指定类型的变量只能接收类型与之匹配的值")]),t._v(" "),a("p",[t._v("3、Swift中Bool只有true和false。而OC中非0即为真")]),t._v(" "),a("p",[t._v("4、新增可选类型Optional")]),t._v(" "),a("h2",{attrs:{id:"常量-与-变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常量-与-变量"}},[t._v("#")]),t._v(" 常量 与 变量")]),t._v(" "),a("p",[t._v("常量一旦设定，在程序运行时就无法修改，常量可以是任何的数据类型，用let修饰")]),t._v(" "),a("p",[t._v("变量指定类型，类型决定占用内存大小，变量的值可以修改，用var修饰")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var age1 = 12\nlet age2 = 26\nage1 = age1 + 1\nage2 = age2 + 1 //这里对常量进行修改，会报错\n")])])]),a("p",[t._v("常量或者变量在初始化的时候可加上类型标注")]),t._v(" "),a("p",[a("code",[t._v("var constantName:<data type> = <optional initial value>")])]),t._v(" "),a("h2",{attrs:{id:"可选类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可选类型"}},[t._v("#")]),t._v(" 可选类型")]),t._v(" "),a("p",[t._v("Swift 的可选（Optional）类型，表示值可以为空。最初使用Swift的时候被这个可选类型很难受，后端接口返回的字符串数据解析后是可选类型字符串，显示在页面上成Optional(\"xxxx\")的样子，值为空的时候使用强制解包'!'又会发生运行时错误")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var age: Int?\nvar age: Optional<Int>\n\n")])])]),a("h3",{attrs:{id:"解包方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解包方式"}},[t._v("#")]),t._v(" 解包方式")]),t._v(" "),a("p",[t._v("可选类型在使用的时候需要进行解包，解包方式有以下几种：")]),t._v(" "),a("p",[t._v("1、强制解包")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("if age != nil {\n\tprint(age!)//只有确定值非空的时候才能使用强制解包\n}\n")])])]),a("p",[t._v("2、可选值绑定 与 自动解包")]),t._v(" "),a("p",[t._v("可以使用可选项绑定来判断可选项是否包含值")]),t._v(" "),a("p",[t._v("如果包含就自动解包，把值赋给一个临时的常量(let)或者变量(var)，并返回true，否则返回false")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('var str:String!\nstr = "Hello, Swift!"\nif let str1 = str {\n   print(str1)\n}else{\n   print("myString 值为 nil")\n}\n')])])]),a("p",[t._v("3、空合并运算符 '??' ,这个用起来比较方便\n"),a("code",[t._v("a ?? b")])]),t._v(" "),a("ul",[a("li",[t._v("a是可选项")]),t._v(" "),a("li",[t._v("b可以是可选项，也可以是非可选项")]),t._v(" "),a("li",[t._v("a和b的存储类型必须相同")]),t._v(" "),a("li",[t._v("如果a不为nil，返回a")]),t._v(" "),a("li",[t._v("如果a为nil，返回b")]),t._v(" "),a("li",[t._v("如果b不为可选项，返回a时会自动解包")])]),t._v(" "),a("p",[t._v("下面代码可以做到str为空时不显示，str非空的时候显示解包后的值")]),t._v(" "),a("p",[a("code",[t._v('leb.text = optionStr ?? ""')])]),t._v(" "),a("p",[t._v("4、隐式解包")]),t._v(" "),a("p",[t._v("在某些情况下，可选项一旦被设定值之后，就会一直拥有值")]),t._v(" "),a("p",[t._v("在这种情况下，可以去掉检查，也不必每次访问的时候都进行解包，因为它能确定每次访问的时候都有值")]),t._v(" "),a("p",[t._v("可以在类型后面加个感叹号 ! 定义一个隐式解包的可选项")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("let num1: Int! = 10 \nlet num2: Int = num1 \nif num1 != nil {\n\tprint(num1 + 6) // 16 \n} \nif let num3 = num1 {\n\tprint(num3) \n}\n")])])]),a("h3",{attrs:{id:"多重可选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多重可选项"}},[t._v("#")]),t._v(" 多重可选项")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var num1: Int? = 10 \nvar num2: Int?? = num1 \nvar num3: Int?? = 10\n\nprint(num2 == num3) // true\t\t\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var num1: Int? = nil \nvar num2: Int?? = num1 \nvar num3: Int?? = nil\n\nprint(num2 == num3) // false\n(num2 ?? 1) ?? 2 // 2 \n(num3 ?? 1) ?? 2 // 1\n")])])]),a("h3",{attrs:{id:"可选链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可选链"}},[t._v("#")]),t._v(" 可选链")]),t._v(" "),a("p",[t._v("多个?可以链接在一起，如果链中任何一个节点是nil，那么整个链就会调用失败")]),t._v(" "),a("p",[t._v("如果可选项为nil，调用方法、下标、属性失败，结果为nil")]),t._v(" "),a("p",[t._v("如果可选项不为nil，调用方法、下标、属性成功，结果会被包装成可选项")]),t._v(" "),a("p",[t._v("如果结果本来就是可选项，不会进行再次包装")]),t._v(" "),a("h3",{attrs:{id:"可选项本质"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可选项本质"}},[t._v("#")]),t._v(" 可选项本质")]),t._v(" "),a("p",[t._v("可选项的本质是enum类型")]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Optional")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Wrapped")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExpressibleByNilLiteral")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("none")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("some")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Wrapped")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token omit keyword"}},[t._v("_")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("some")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Wrapped")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"元组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元组"}},[t._v("#")]),t._v(" 元组")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('let httpError = (404, "Not Fount")\nprint("status code is \\(httpError.0)")\n\n// let (code, message) = httpError\nlet (code, _) = httpError\nprint("status code is \\(code)")\n\n// 带默认键值\nlet httpError = (code:404, message:"Not Fount")\nprint("status code is \\(httpError.code)")\n')])])]),a("h2",{attrs:{id:"字面量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字面量"}},[t._v("#")]),t._v(" 字面量")]),t._v(" "),a("p",[t._v("常见字面量类型")]),t._v(" "),a("ul",[a("li",[t._v("public typealias IntegerLiteralType = Int")]),t._v(" "),a("li",[t._v("public typealias FloatLiteralType = Double")]),t._v(" "),a("li",[t._v("public typealias BooleanLiteralType = Bool")]),t._v(" "),a("li",[t._v("public typealias StringLiteralType = String")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 可以通过typealias修改字面量的默认类型 \ntypealias FloatLiteralType = Float \ntypealias IntegerLiteralType = UInt8 \nvar age = 10 // UInt8 \nvar height = 1.68 // Float\n")])])]),a("p",[t._v("Swift自带类型之所以能够通过字面量初始化，是因为它们遵守了对应的协议")]),t._v(" "),a("ul",[a("li",[t._v("Bool : ExpressibleByBooleanLiteral")]),t._v(" "),a("li",[t._v("Int : ExpressibleByIntegerLiteral")]),t._v(" "),a("li",[t._v("Float、Double : ExpressibleByIntegerLiteral、ExpressibleByFloatLiteral")]),t._v(" "),a("li",[t._v("Dictionary : ExpressibleByDictionaryLiteral")]),t._v(" "),a("li",[t._v("String : ExpressibleByStringLiteral")]),t._v(" "),a("li",[t._v("Array、Set : ExpressibleByArrayLiteral")]),t._v(" "),a("li",[t._v("Optional : ExpressibleByNilLiteral")])]),t._v(" "),a("p",[t._v("字面量协议应用")]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExpressibleByIntegerLiteral")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExpressibleByFloatLiteral")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExpressibleByStringLiteral")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomStringConvertible")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')])]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" score"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Double")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("required")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("floatLiteral value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Double")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("score "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("required")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("integerLiteral value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("score "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Double")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("required")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stringLiteral value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("required")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unicodeScalarLiteral value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("required")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("extendedGraphemeClusterLiteral value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" description"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name=')]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("\\(")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(",score=")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("\\(")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[t._v("score")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// name=,score=90.0 ")]),t._v("\nstu "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("98.5")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// name=,score=98.5 ")]),t._v("\nstu "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Jack"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// name=Jack,score=0.0")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);