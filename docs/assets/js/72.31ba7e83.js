(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{381:function(_,v,t){"use strict";t.r(v);var l=t(6),e=Object(l.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h2",{attrs:{id:"符号"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#符号"}},[_._v("#")]),_._v(" 符号")]),_._v(" "),v("h3",{attrs:{id:"_1、符号表种类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、符号表种类"}},[_._v("#")]),_._v(" 1、符号表种类：")]),_._v(" "),v("ul",[v("li",[_._v("Symbol Table : 用来保存符号")]),_._v(" "),v("li",[_._v("String Table : 用来保存符号的名称")]),_._v(" "),v("li",[_._v("Indirect Symbol Table: 间接符号表。保存使用的外部符号。更准确一点就是使用的外部动态库的符号。是Symbol Table的子集")])]),_._v(" "),v("h3",{attrs:{id:"_2、符号区分"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、符号区分"}},[_._v("#")]),_._v(" 2、符号区分：")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("按存在空间划分")]),_._v(" "),v("ul",[v("li",[_._v("non private external")]),_._v(" "),v("li",[_._v("weak private external")])])]),_._v(" "),v("li",[v("p",[_._v("按照模块划分")]),_._v(" "),v("ul",[v("li",[_._v("weak global")]),_._v(" "),v("li",[_._v("weak local")])])]),_._v(" "),v("li",[v("p",[_._v("按功能划分")]),_._v(" "),v("ul",[v("li",[_._v("f(file)、F(function)、O(Data)、d(Debug)、"),v("em",[_._v("ABS")]),_._v("(Absolute)、"),v("em",[_._v("COM")]),_._v("(Common)、"),v("em",[_._v("UND")]),_._v("(?)")])])]),_._v(" "),v("li",[v("p",[_._v("按符号种类划分")]),_._v(" "),v("ul",[v("li",[_._v("U\tundeﬁned（未定义）")])])]),_._v(" "),v("li",[v("p",[_._v("A\tabsolute（绝对符号）")]),_._v(" "),v("ul",[v("li",[_._v("T \ttext section symbol("),v("code",[_._v("__TEXT.__text")]),_._v("​)")])])]),_._v(" "),v("li",[v("p",[_._v("D\tdata section symbol("),v("code",[_._v("__DATA.__data")]),_._v("​)")]),_._v(" "),v("ul",[v("li",[_._v("B\tbss section symbol("),v("code",[_._v("__DATA.__bss")]),_._v("​)")])])]),_._v(" "),v("li",[v("p",[_._v("C\tcommon symbol（只能出现在"),v("code",[_._v("MH_OBJECT")]),_._v("​ 类型的"),v("code",[_._v("Mach-O")]),_._v("​⽂件中）")]),_._v(" "),v("ul",[v("li",[_._v("​"),v("code",[_._v("- ​")]),_._v("​ debugger symbol table")])])]),_._v(" "),v("li",[v("p",[_._v("S\t除了上⾯所述的，存放在其他"),v("code",[_._v("section")]),_._v("​的内容，例如未初始化的全局变量存放在("),v("code",[_._v("__DATA,__common")]),_._v("​)中")]),_._v(" "),v("ul",[v("li",[_._v("I\tindirect symbol（符号信息相同，代表同⼀符号）")])])]),_._v(" "),v("li",[v("p",[_._v("u\t动态共享库中的⼩写u表示⼀个未定义引⽤对同⼀库中另⼀个模块中私有外部符号")])])]),_._v(" "),v("h3",{attrs:{id:"_3、导入-import-导出-export-符号"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3、导入-import-导出-export-符号"}},[_._v("#")]),_._v(" 3、导⼊（Import）导出（Export）符号：")]),_._v(" "),v("ul",[v("li",[_._v("export symbol：导出表表示一个符号，其他文件可以将其导⼊（Import）")]),_._v(" "),v("li",[_._v("Import symbol：导入其他库的符号")])]),_._v(" "),v("h3",{attrs:{id:"_4、two-levelnamespace-flat-namespace"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4、two-levelnamespace-flat-namespace"}},[_._v("#")]),_._v(" 4、two_levelnamespace & ﬂat_namespace：")]),_._v(" "),v("p",[_._v("⼆级命名空间与⼀级命名空间。链接器默认采⽤⼆级命名空间，也就是除了会记录符号 名称，还会记录符号属于哪个动态库的，⽐如会记录下来_NSLog来⾃Foundation。")]),_._v(" "),v("h3",{attrs:{id:"_5、weak-symbol"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5、weak-symbol"}},[_._v("#")]),_._v(" 5、Weak Symbol：")]),_._v(" "),v("ul",[v("li",[_._v("Weak Reference Symbol: 表示此未定义符号是弱引⽤。如果动态链接器找不到该符号的定义，则将其符 为0。静态链接器会将此符号设置弱链接标志。")]),_._v(" "),v("li",[_._v("Weak defintion Symbol: 表示此符号为弱定义符号。如果静态链接器或动态链接器为此符号找到另⼀个（⾮弱）定义，则弱定义将被忽略。只能将合并部分中的符号标记为弱定义。")])]),_._v(" "),v("h3",{attrs:{id:"_6、common-symbol"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6、common-symbol"}},[_._v("#")]),_._v(" 6、Common Symbol：")]),_._v(" "),v("p",[_._v("在定义时，未初始化的全局符号。")]),_._v(" "),v("p",[_._v("链接器设置：")]),_._v(" "),v("ul",[v("li",[_._v("-d: 强制定义Common Symbol。")]),_._v(" "),v("li",[_._v("-commons: 指定对待Common Symbol如何响应。")])]),_._v(" "),v("h2",{attrs:{id:"strip命令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#strip命令"}},[_._v("#")]),_._v(" strip命令")]),_._v(" "),v("p",[_._v("strip用来移除或修改符号表中的符号")]),_._v(" "),v("p",[v("strong",[_._v("间接符号不能删除")])]),_._v(" "),v("p",[v("strong",[_._v("strip动态库的时候，不能strip全局符号")])]),_._v(" "),v("h3",{attrs:{id:"strip-style-在xcode-build-setting中配置"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#strip-style-在xcode-build-setting中配置"}},[_._v("#")]),_._v(" Strip Style：在Xcode build setting中配置")]),_._v(" "),v("ul",[v("li",[_._v("Debugging Symbols：调试符号")]),_._v(" "),v("li",[_._v("All Symbols：全部符号")]),_._v(" "),v("li",[_._v("Non-Global Symbols：除全局符号外的所有符号")])]),_._v(" "),v("p",[_._v("Strip Debugging Symbols流程：")]),_._v(" "),v("ol",[v("li",[_._v("将Mach-O 解析成模型Object")]),_._v(" "),v("li",[_._v("遍历LoadCommands")]),_._v(" "),v("li",[_._v("找到"),v("code",[_._v("​ Segname==__DWARF")]),_._v("​的LoadCommand")]),_._v(" "),v("li",[_._v("移除Section")]),_._v(" "),v("li",[_._v("从符号表中移除Symbol")]),_._v(" "),v("li",[_._v("将修改后的模型Object重新写入Mach-O")])]),_._v(" "),v("p",[_._v("Strip All Symbols 流程")]),_._v(" "),v("ol",[v("li",[_._v("Strip Debugging Symbols")]),_._v(" "),v("li",[_._v("markSymbols")]),_._v(" "),v("li",[_._v("除了间接符号表中引用的符号全部删除")])]),_._v(" "),v("p",[_._v("Strip Non-Global Symbols流程：")]),_._v(" "),v("ol",[v("li",[_._v("Strip Debugging Symbols")]),_._v(" "),v("li",[_._v("遍历符号表")]),_._v(" "),v("li",[_._v("删除"),v("code",[_._v("​ n_tyoe != N_EXT")]),_._v("​的符号. (n_tyoe != N_EXT, 为外部符号)")])]),_._v(" "),v("h3",{attrs:{id:"strip命令参数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#strip命令参数"}},[_._v("#")]),_._v(" strip命令参数：")]),_._v(" "),v("ol",[v("li",[_._v("-x: non_global")]),_._v(" "),v("li",[_._v("无参数: 代表全部符号")]),_._v(" "),v("li",[_._v("-S: 调试符号")])])])}),[],!1,null,null,null);v.default=e.exports}}]);