(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{388:function(_,v,a){"use strict";a.r(v);var i=a(6),t=Object(i.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h2",{attrs:{id:"一、h-264编码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一、h-264编码"}},[_._v("#")]),_._v(" 一、H.264编码")]),_._v(" "),v("p",[_._v("H.264，又称为MPEG-4 Part 10，Advanced Video Coding。")]),_._v(" "),v("ul",[v("li",[_._v("译为：MPEG-4第10部分，高级视频编码")]),_._v(" "),v("li",[_._v("简称：MPEG-4 AVC")])]),_._v(" "),v("p",[_._v("H.264编码的压缩比可以达到至少是100:1")]),_._v(" "),v("p",[_._v("H.264是迄今为止视频录制、压缩和分发的最常用格式。截至2019年9月，已有91％的视频开发人员使用了该格式。H.264提供了明显优于以前任何标准的压缩性能。H.264因其是蓝光盘的其中一种编解码标准而著名，所有蓝光盘播放器都必须能解码H.264。")]),_._v(" "),v("h2",{attrs:{id:"二、编码器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二、编码器"}},[_._v("#")]),_._v(" 二、编码器")]),_._v(" "),v("p",[v("a",{attrs:{href:"https://en.wikipedia.org/wiki/X264",target:"_blank",rel:"noopener noreferrer"}},[_._v("x264"),v("OutboundLink")],1),_._v("是一款免费的高性能的H.264开源编码器。x264编码器在FFmpeg中的名称是libx264。")]),_._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[_._v('AVCodec *codec = avcodec_find_encoder_by_name("libx264");\n')])])]),v("h2",{attrs:{id:"三、解码器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三、解码器"}},[_._v("#")]),_._v(" 三、解码器")]),_._v(" "),v("p",[_._v("FFmpeg默认已经内置了一个H.264的解码器，名称是h264")]),_._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[_._v('AVCodec *codec1 = avcodec_find_decoder_by_name("h264");\n \n// 或者\nAVCodec *codec2 = avcodec_find_decoder(AV_CODEC_ID_H264);\n')])])]),v("h2",{attrs:{id:"四、编码过程与原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四、编码过程与原理"}},[_._v("#")]),_._v(" 四、编码过程与原理")]),_._v(" "),v("p",[_._v("编码主要步骤：")]),_._v(" "),v("ul",[v("li",[_._v("划分帧类型")]),_._v(" "),v("li",[_._v("帧内/帧间编码")]),_._v(" "),v("li",[_._v("变换 + 量化")]),_._v(" "),v("li",[_._v("滤波")]),_._v(" "),v("li",[_._v("熵编码")])]),_._v(" "),v("h3",{attrs:{id:"_4-1-划分帧类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-划分帧类型"}},[_._v("#")]),_._v(" 4.1 划分帧类型")]),_._v(" "),v("p",[_._v("有统计结果表明：在连续的几帧图像中，一般只有10%以内的像素有差别，亮度的差值变化不超过2%，而色度的差值变化只在1%以内。")]),_._v(" "),v("h4",{attrs:{id:"gop"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#gop"}},[_._v("#")]),_._v(" GOP")]),_._v(" "),v("p",[_._v("于是可以将一串连续的相似的帧归到一个图像群组（Group Of Pictures，GOP）。")]),_._v(" "),v("p",[_._v("​"),v("img",{attrs:{src:"http://xingyajie.oss-cn-hangzhou.aliyuncs.com/uPic/497279-20210524113111511-1081267267.png",alt:"GOP"}}),_._v("​")]),_._v(" "),v("p",[_._v("GOP中的帧可以分为3种类型：")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("I 帧（I Picture、I Frame、Intra Coded Picture），译为：帧内编码图像，也叫做关键帧（Keyframe）")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("是视频的第一帧，也是GOP的第一帧，一个GOP只有一个I帧")])]),_._v(" "),v("li",[v("p",[_._v("编码")]),_._v(" "),v("ul",[v("li",[_._v("对整帧图像数据进行编码")])])]),_._v(" "),v("li",[v("p",[_._v("解码")]),_._v(" "),v("ul",[v("li",[_._v("仅用当前I帧的编码数据就可以解码出完整的图像")])])]),_._v(" "),v("li",[v("p",[_._v("是一种自带全部信息的独立帧，无需参考其他图像便可独立进行解码，可以简单理解为一张静态图像")])])])]),_._v(" "),v("li",[v("p",[_._v("P帧（P Picture、P Frame、Predictive Coded Picture），译为：预测编码图像")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("编码")]),_._v(" "),v("ul",[v("li",[_._v("并不会对整帧图像数据进行编码")]),_._v(" "),v("li",[_._v("以前面的I帧或P帧作为参考帧，只编码当前P帧与参考帧的差异数据")])])]),_._v(" "),v("li",[v("p",[_._v("解码")]),_._v(" "),v("ul",[v("li",[_._v("需要先解码出前面的参考帧，再结合差异数据解码出当前P帧完整的图像")])])])])]),_._v(" "),v("li",[v("p",[_._v("B帧（B Picture、B Frame、Bipredictive Coded Picture），译为：前后预测编码图像")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("编码")]),_._v(" "),v("ul",[v("li",[_._v("并不会对整帧图像数据进行编码")]),_._v(" "),v("li",[_._v("同时以前面、后面的I帧或P帧作为参考帧，只编码当前B帧与前后参考帧的差异数据")]),_._v(" "),v("li",[_._v("因为可参考的帧变多了，所以只需要存储更少的差异数据")])])]),_._v(" "),v("li",[v("p",[_._v("解码")]),_._v(" "),v("ul",[v("li",[_._v("需要先解码出前后的参考帧，再结合差异数据解码出当前B帧完整的图像")])])])])])]),_._v(" "),v("p",[_._v("不难看出，编码后的数据大小：I帧 > P帧 > B帧。")]),_._v(" "),v("p",[_._v("​"),v("img",{attrs:{src:"http://xingyajie.oss-cn-hangzhou.aliyuncs.com/uPic/497279-20210524145850997-158052138.png",alt:"显示和编码顺序"}}),_._v("​")]),_._v(" "),v("p",[_._v("在较早的视频编码标准（例如MPEG-2）中，P帧只能使用一个参考帧，而一些现代视频编码标准（比如H.264），允许使用多个参考帧。")]),_._v(" "),v("p",[_._v("​"),v("img",{attrs:{src:"http://xingyajie.oss-cn-hangzhou.aliyuncs.com/uPic/497279-20210524192349714-1741005171.jpg",alt:"多个参考帧"}}),_._v("​")]),_._v(" "),v("h4",{attrs:{id:"gop的长度"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#gop的长度"}},[_._v("#")]),_._v(" GOP的长度")]),_._v(" "),v("p",[_._v("GOP的长度表示GOP的帧数。GOP的长度需要控制在合理范围，以平衡视频质量、视频大小（网络带宽）和seek效果（拖动、快进的响应速度）等。")]),_._v(" "),v("ul",[v("li",[_._v("加大GOP长度有利于减小视频文件大小，但也不宜设置过大，太大则会导致GOP后部帧的画面失真，影响视频质量")]),_._v(" "),v("li",[_._v("由于P、B帧的复杂度大于I帧，GOP值过大，过多的P、B帧会影响编码效率，使编码效率降低")]),_._v(" "),v("li",[_._v("如果设置过小的GOP值，视频文件会比较大，则需要提高视频的输出码率，以确保画面质量不会降低，故会增加网络带宽")]),_._v(" "),v("li",[_._v("GOP长度也是影响视频seek响应速度的关键因素，seek时播放器需要定位到离指定位置最近的前一个I帧，如果GOP太大意味着距离指定位置可能越远（需要解码的参考帧就越多）、seek响应的时间（缓冲时间）也越长")])]),_._v(" "),v("h4",{attrs:{id:"gop的类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#gop的类型"}},[_._v("#")]),_._v(" GOP的类型")]),_._v(" "),v("p",[_._v("GOP又可以分为开放（Open）、封闭（Closed）两种。")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Open")]),_._v(" "),v("ul",[v("li",[_._v("前一个GOP的B帧可以参考下一个GOP的I帧")])])]),_._v(" "),v("li",[v("p",[_._v("Closed")]),_._v(" "),v("ul",[v("li",[_._v("前一个GOP的B帧不能参考下一个GOP的I帧")]),_._v(" "),v("li",[_._v("GOP不能以B帧结尾")])])])]),_._v(" "),v("p",[_._v("​"),v("img",{attrs:{src:"http://xingyajie.oss-cn-hangzhou.aliyuncs.com/uPic/497279-20210524151511069-453114588.png",alt:"长度为15的Open GOP"}}),_._v("​")]),_._v(" "),v("p",[_._v("​"),v("img",{attrs:{src:"http://xingyajie.oss-cn-hangzhou.aliyuncs.com/uPic/497279-20210524151513095-1975140503.png",alt:"长度为15的Closed GOP"}}),_._v("​")]),_._v(" "),v("p",[_._v("需要注意的是：")]),_._v(" "),v("ul",[v("li",[_._v("由于P帧、B帧都对前面的参考帧（P帧、I帧）有依赖性，因此，一旦前面的参考帧出现数据错误，就会导致后面的P帧、B帧也出现数据错误，而且这种错误还会继续向后传播")]),_._v(" "),v("li",[_._v("对于普通的I帧，其后的P帧和B帧可以参考该普通I帧之前的其他I帧")])]),_._v(" "),v("p",[_._v("在Closed GOP中，有一种特殊的I帧，叫做IDR帧（Instantaneous Decoder Refresh，译为：即时解码刷新）。")]),_._v(" "),v("ul",[v("li",[_._v("当遇到IDR帧时，会清空参考帧队列")]),_._v(" "),v("li",[_._v("如果前一个序列出现重大错误，在这里可以获得重新同步的机会，使错误不会继续往下传播")]),_._v(" "),v("li",[_._v("一个IDR帧之后的所有帧，永远都不会参考该IDR帧之前的帧")]),_._v(" "),v("li",[_._v("视频播放时，播放器一般都支持随机seek（拖动）到指定位置，而播放器直接选择到指定位置附近的IDR帧进行播放最为便捷，因为可以明确知道该IDR帧之后的所有帧都不会参考其之前的其他I帧，从而避免较为复杂的反向解析")])]),_._v(" "),v("p",[_._v("​"),v("img",{attrs:{src:"http://xingyajie.oss-cn-hangzhou.aliyuncs.com/uPic/497279-20210524151514840-1369205865.png",alt:"IDR"}}),_._v("​")]),_._v(" "),v("h3",{attrs:{id:"_4-2-帧内-帧间编码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-帧内-帧间编码"}},[_._v("#")]),_._v(" 4.2 帧内/帧间编码")]),_._v(" "),v("p",[_._v("I帧采用的是帧内（Intra Frame）编码，处理的是空间冗余。")]),_._v(" "),v("p",[_._v("P帧、B帧采用的是帧间（Inter Frame）编码，处理的是时间冗余。")]),_._v(" "),v("h4",{attrs:{id:"划分宏块"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#划分宏块"}},[_._v("#")]),_._v(" 划分宏块")]),_._v(" "),v("p",[_._v("在进行编码之前，首先要将一张完整的帧切割成多个宏块（Macroblock），H.264中的宏块大小通常是16x16。")]),_._v(" "),v("p",[_._v("宏块可以进一步拆分为多个更小的变换块（Transform blocks）、预测块（Prediction blocks）。")]),_._v(" "),v("ul",[v("li",[_._v("变换块的尺寸有：16x16、8x8、4x4")]),_._v(" "),v("li",[_._v("预测块的尺寸有：16×16、16×8、8×16、8×8、8×4、4×8、4×4")])]),_._v(" "),v("p",[_._v("​"),v("img",{attrs:{src:"http://xingyajie.oss-cn-hangzhou.aliyuncs.com/uPic/497279-20210524184947061-764686480.png",alt:"预测块"}}),_._v("​")]),_._v(" "),v("h4",{attrs:{id:"帧内编码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#帧内编码"}},[_._v("#")]),_._v(" 帧内编码")]),_._v(" "),v("p",[_._v("帧内编码，也称帧内预测。以4x4的预测块为例，共有9种可选的预测模式。")]),_._v(" "),v("p",[_._v("​"),v("img",{attrs:{src:"http://xingyajie.oss-cn-hangzhou.aliyuncs.com/uPic/497279-20210524193503211-376585236.png",alt:"预测模式"}}),_._v("​")]),_._v(" "),v("p",[_._v("​"),v("img",{attrs:{src:"http://xingyajie.oss-cn-hangzhou.aliyuncs.com/uPic/497279-20210524193505340-1505666021.png",alt:"预测模式描述"}}),_._v("​")]),_._v(" "),v("p",[_._v("利用帧内预测技术，可以得到预测帧，最终只需要保留预测模式信息、以及预测帧与原始帧的残差值。")]),_._v(" "),v("p",[_._v("编码器会选取最佳预测模式，使预测帧更加接近原始帧，减少相互间的差异，提高编码的压缩效率。")]),_._v(" "),v("h4",{attrs:{id:"帧间编码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#帧间编码"}},[_._v("#")]),_._v(" 帧间编码")]),_._v(" "),v("p",[_._v("帧间编码，也称帧间预测，用到了运动补偿（Motion compensation）技术。")]),_._v(" "),v("p",[_._v("编码器利用块匹配算法，尝试在先前已编码的帧（称为参考帧）上搜索与正在编码的块相似的块。如果编码器搜索成功，则可以使用称为运动矢量的向量对块进行编码，该向量指向匹配块在参考帧处的位置。")]),_._v(" "),v("p",[_._v("在大多数情况下，编码器将成功执行，但是找到的块可能与它正在编码的块不完全匹配。这就是编码器将计算它们之间差异的原因。这些残差值称为预测误差，需要进行变换并将其发送给解码器。")]),_._v(" "),v("p",[_._v("综上所述，如果编码器在参考帧上成功找到匹配块，它将获得指向匹配块的运动矢量和预测误差。使用这两个元素，解码器将能够恢复该块的原始像素。")]),_._v(" "),v("p",[_._v("如果一切顺利，该算法将能够找到一个几乎没有预测误差的匹配块，因此，一旦进行变换，运动矢量加上预测误差的总大小将小于原始编码的大小。")]),_._v(" "),v("p",[_._v("如果块匹配算法未能找到合适的匹配，则预测误差将是可观的。因此，运动矢量的总大小加上预测误差将大于原始编码。在这种情况下，编码器将产生异常，并为该特定块发送原始编码。")]),_._v(" "),v("h3",{attrs:{id:"变换与量化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#变换与量化"}},[_._v("#")]),_._v(" 变换与量化")]),_._v(" "),v("p",[_._v("接下来对残差值进行DCT变换（Discrete Cosine Transform，译为离散余弦变换）。")]),_._v(" "),v("h2",{attrs:{id:"五、规格"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#五、规格"}},[_._v("#")]),_._v(" 五、规格")]),_._v(" "),v("p",[_._v("H.264的主要规格有：")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Baseline Profile（BP）")]),_._v(" "),v("ul",[v("li",[_._v("支持I/P帧，只支持无交错（Progressive）和CAVLC")]),_._v(" "),v("li",[_._v("一般用于低阶或需要额外容错的应用，比如视频通话、手机视频等即时通信领域")])])]),_._v(" "),v("li",[v("p",[_._v("Extended Profile（XP）")]),_._v(" "),v("ul",[v("li",[_._v("在Baseline的基础上增加了额外的功能，支持流之间的切换，改进误码性能")]),_._v(" "),v("li",[_._v("支持I/P/B/SP/SI帧，只支持无交错（Progressive）和CAVLC")]),_._v(" "),v("li",[_._v("适合于视频流在网络上的传输场合，比如视频点播")])])]),_._v(" "),v("li",[v("p",[_._v("Main Profile（MP）")]),_._v(" "),v("ul",[v("li",[_._v("提供I/P/B帧，支持无交错（Progressive）和交错（Interlaced），支持CAVLC和CABAC")]),_._v(" "),v("li",[_._v("用于主流消费类电子产品规格如低解码（相对而言）的MP4、便携的视频播放器、PSP和iPod等")])])]),_._v(" "),v("li",[v("p",[_._v("High Profile（HiP）")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("最常用的规格")])]),_._v(" "),v("li",[v("p",[_._v("在Main的基础上增加了8x8内部预测、自定义量化、无损视频编码和更多的YUV格式（如4:4:4）")]),_._v(" "),v("ul",[v("li",[_._v("High 4:2:2 Profile（Hi422P）")]),_._v(" "),v("li",[_._v("High 4:4:4 Predictive Profile（Hi444PP）")]),_._v(" "),v("li",[_._v("High 4:2:2 Intra Profile")]),_._v(" "),v("li",[_._v("High 4:4:4 Intra Profile")])])]),_._v(" "),v("li",[v("p",[_._v("用于广播及视频碟片存储（蓝光影片），高清电视的应用")])])])])])])}),[],!1,null,null,null);v.default=t.exports}}]);